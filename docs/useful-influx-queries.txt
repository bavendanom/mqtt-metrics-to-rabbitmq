from(bucket: "device-metrics-db")
  |> range(start: 2024-05-02T14:00:00Z, stop: 2024-05-04T18:00:00Z)
  |> filter(fn: (r) => r["_measurement"] == "device-temperature-metric")
  |> filter(fn: (r) => r["device-id"] =~ /69291f12-974a-4d4d-a426-567ace6d6428/)
  |> filter(fn: (r) => r._field == "temperature")

from(bucket: "device-metrics-db")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r["_measurement"] == "device-temperature-metric")
  |> filter(fn: (r) => r["_field"] == "temperature")
  |> aggregateWindow(every: 1s, fn: mean, createEmpty: false)
  |> yield(name: "mean")

from(bucket: "device-metrics-db")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r._measurement == "device-temperature-metric")
  |> filter(fn: (r) => r["_field"] == "temperature")
  |> keep(columns: ["device-id", "_value", "_time"])
  |> rename(
        fn: (column) => {
            newColumnName = if column == "device-id" then "device_id" else column
            return newColumnName
        },
    )
  |> group()

from(bucket: "device-metrics-db")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r["_measurement"] == "device-temperature-metric")
  |> unique(column: "device-id")
  |> keep(columns: ["device-id"])
  |> group()
  |> map(fn: (r) => ({ foo: r["device-id"] }))
